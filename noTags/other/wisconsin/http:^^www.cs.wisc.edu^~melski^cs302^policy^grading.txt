Date: Mon, 11 Nov 1996 17:02:22 GMT
Server: NCSA/1.5
Content-type: text/html
Last-modified: Wed, 11 Sep 1996 17:16:25 GMT
Content-length: 2641



CS302 Grading Information


CS302 Grading Policy

Grading Percentages
The following percentages have been assigned for CS302:


       Exams                             60%
         - Midterm I  (week 7)         20%
         - Midterm II (week 12)        20%
         - Final      (week 16)        20%
       Quizzes                            5%
       Programs                          35%
       --------------------------------------
       Total                            100%

Individual assignments and exams will not be assigned letter
grades.  Letter grades will be assigned at the end of the semester
such that 2.8 is the class's overall grade point average.  Exceptions
may be made for truely exceptional classes.


Program Grading Standards
 Grading of programming assignments is based upon three criteria:
correctness, technique, and readability.

  Correctness  is by far the most important criterion. 
A program which does not correctly fulfill the requirements of the
assignment is subject to a grade reduction of as much as 50% or more.

 The  technique  used in a program is the means
in which that particular problem was solved.  A solution which is
correct but clumsy or awkward is subject to a grade reduction of as much
as 25%.  Sometimes there will be very little leeway in this area; other
times there might be several correct solutions.

 The  readability  of a program refers to the ease
with which a human reader (such as the grader!) can read and
understand the source code.  The readability does not affect the
execution of the program; however, poor readability can result in
programming errors which make the program incorrect.  Poor readability
can also result in a grade reduction of as much as 25%.  The readability
of a program includes:


 Proper and consistent indentation of statements
   Documentation (via comments) for functions and parameters,
       and for non-obvious variables and pieces of code
   Use of blank lines to separate logically separate pieces of code
   Use of meaningful identifiers for variables, functions, etc.
   Correct use of constants
   Use of idioms (customary standard ways of writing
       logically equivalent pieces of code) discussed in class


Last modified: Wed Sep 11 12:16:25 1996 by David Melski

melski@cs.wisc.edu



