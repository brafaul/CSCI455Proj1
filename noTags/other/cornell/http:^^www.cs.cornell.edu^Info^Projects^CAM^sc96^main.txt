MIME-Version: 1.0
Server: CERN/3.0
Date: Monday, 25-Nov-96 00:19:27 GMT
Content-Type: text/html
Content-Length: 4819
Last-Modified: Thursday, 19-Sep-96 16:34:27 GMT





Low-Latency Communication on the IBM RISC System/6000 SP 







   
 Next: Introduction
 
Low-Latency Communication on the IBM RISC
  System/6000 SP 

Chi-Chao Chang, Grzegorz Czajkowski, Chris Hawblitzel, 
and Thorsten von Eicken  
Department of Computer Science  
Cornell University  
Ithaca, NY 14853 
{chichao,grzes,hawblitz,tve}@cs.cornell.edu


Abstract:
The IBM SP is one of the most powerful commercial MPPs, yet, in
  spite of its fast processors and high network bandwidth, the SP's
  communication latency is inferior to older machines such as the TMC
  CM-5 or Meiko CS-2. This paper investigates the use of Active
  Messages (AM) communication primitives as an alternative to the
  standard message passing in order to reduce communication overheads
  and to offer a good building block for higher layers of software.

  The first part of this paper describes an implementation of Active
  Messages (SP AM) which is layered directly on top of the SP's
  network adapter (TB2).  With comparable bandwidth, SP AM's low
  overhead yields a round-trip latency that is 40% lower than IBM
  MPL's.  The second part of the paper demonstrates the power of AM as
  a communication substrate by layering Split-C as well as MPI over
  it. Split-C benchmarks are used to compare the SP to other MPPs and
  show that low message overhead and high throughput compensate for
  SP's high network latency.  The MPI implementation is based on the
  freely available MPICH version and achieves performance equivalent
  to IBM's MPI-F on the NAS benchmarks.

 

 Introduction

 Active Messages background
 SP Overview

 Active Messages Implementation

 Basic Send and Receive Mechanisms
 Flow Control
 Round-trip Latency
 Bandwidth
 Overheads
 Summary and Comparison with MPL

 Split-C Application Benchmarks
 MPI Implementation over Active Messages

 Basic Implementation
 Optimizations
 MPI Point-to-Point Performance
 NAS benchmarks

 Conclusions
 Acknowledgements
 References
   About this document ... 

 

Chris Hawblitzel 
Thu Sep 19 12:22:33 EDT 1996



