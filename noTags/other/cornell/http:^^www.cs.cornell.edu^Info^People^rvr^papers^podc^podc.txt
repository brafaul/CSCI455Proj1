MIME-Version: 1.0
Server: CERN/3.0
Date: Sunday, 24-Nov-96 23:04:49 GMT
Content-Type: text/html
Content-Length: 4200
Last-Modified: Monday, 15-May-95 16:19:29 GMT





A Framework for Protocol Composition in Horus






    
 Next:  Introduction
  

10000
10000

A Framework for Protocol Composition in Horus

Robbert van Renesse, Kenneth P. Birman, Roy Friedman, Mark Hayden, and David A. Karr
Dept. of Computer Science Cornell University


Abstract:
The Horus system supports a communication architecture that treats
protocols as instances of an abstract data type.
This approach encourages developers to
partition complex protocols into simple microprotocols, each of which
is implemented by a protocol layer.
Protocol layers can be stacked on top of each
other in a variety of ways, at run-time.
First, we describe the classes of protocols that can be supported this way.
Next, we present the Horus object model that we designed for
this technology, and the interface between the layers that makes it all
work.  We then present an example layer that implements a group
membership protocol.  Next, we show how, given a set of required properties,
an appropriate stack can be constructed.  We look at an example stack of
protocols, which provides fault-tolerant, totally ordered communication
between a group of processes.
The work contributes a standard framework for protocol development and
experimentation, provides a high performance implementation of the
virtual synchrony model, and introduces a methodology for increasing the
robustness of the protocol development process.



 

  Introduction
  Classes of Protocols
  Horus Objects
  Common Protocol Interface
  Example: A Membership Protocol
  Protocol Properties and Inheritance
  Example: A Typical Protocol Stack
  Reference Implementation Effort
  The End-to-End Argument
  Performance and Overhead
  Status and Challenges
  Related Work
  Conclusion

  Acknowledgements

 References
  About this document ... 

 

 Robbert VanRenesse 
Mon May 15 12:16:43 EDT 1995


