Date: Tue, 10 Dec 1996 03:38:07 GMT
Server: NCSA/1.4.2
Content-type: text/html
Last-modified: Sun, 04 Jun 1995 23:39:43 GMT
Content-length: 4634


Implementation of Dynamic Superpage Management
Implementation of Dynamic Superpage Management

We're looking for someone to help us implement dynamic superpage
management as a quals or masters project.  Send me (romer@cs.washington.edu)
mail if you're interested.
Background
In recent work, 
Wayne Ohlrich, 
Anna Karlin, 
Brian Bershad, 
and
I
have
explored policies that monitor application memory reference patterns
in order to identify and resolve TLB performance problems. Poor TLB
performance results when the TLB is too small to cover the current
application's working set.  Several modern architectures support
superpages: pages whose size is a multiple of the system's base page
size. On these systems TLB performance can be improved by using larger
pages, but at the cost of wasted memory due to internal
fragmentation. We explored several policies that adapt the page size
dynamically to different regions of an application's address space,
constructing superpages by copying the component pages to a contiguous
region of memory. We developed a policy that monitors TLB misses, and
balances the potential benefit of having a superpage (a reduction in
future TLB misses) against the cost of constructing the superpage (an
in-memory copy). By constructing superpages only when and where TLB
miss patterns warrant, this policy attains the TLB performance of
large pages without their internal fragmentation.

See the paper 
   Memory Systems Research at UW

