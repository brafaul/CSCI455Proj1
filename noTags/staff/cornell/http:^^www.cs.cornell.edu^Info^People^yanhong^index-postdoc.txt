MIME-Version: 1.0
Server: CERN/3.0
Date: Wednesday, 20-Nov-96 19:31:02 GMT
Content-Type: text/html
Content-Length: 8144
Last-Modified: Saturday, 24-Aug-96 03:26:22 GMT




Yanhong Annie Liu's home page


Yanhong Annie Liu

 I am a Post-Doctorate Associate working with Professor  Tim Teitelbaum.

Research Interests 

General systematic approaches to improving the efficiency of
computations.  Program analysis and transformation techniques for
incremental computation and parallel/concurrent computation.
Applications in optimizing compilers, language-based interactive
systems, algorithm design, program development, software system
organization, and software maintenance.

Selected Publications and Talks
Ph.D. Dissertation
 Yanhong A. Liu.  Incremental Computation: A Semantics-Based
Systematic Transformational Approach, Cornell University, Ithaca,
New York, January 1996.  Also appeared as Cornell Technical Report TR
95-1551, October, 1995.  abstract
Journal Publication
 Y. A. Liu and T. Teitelbaum.

Systematic derivation of incremental programs.
Science of Computer Programming, 24(1):1-39, February 1995.

Refereed Conference Publications
 Y. A. Liu, S. D. Stoller, and T. Teitelbaum.

Discovering auxiliary information for incremental computation.
In Proceedings of the 23rd Annual ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages, pages 157-170,
St. Petersburg Beach, Florida, January 1996.

 Y. A. Liu.

CACHET: An interactive, incremental-attribution-based program
  transformation system for deriving incremental programs.
In Proceedings of the 10th Knowledge-Based Software Engineering
  Conference, pages 19-26,
Boston, Massachusetts, November 1995.  IEEE Computer Society Press.

 Y. A. Liu.
Selectively caching intermediate results for incremental computation.
In Proceedings of the 4th International Conference for
  Young Computer Scientists,
pages 367-374, Beijing, China, July 1995. Peking University Press.

 Y. A. Liu and T. Teitelbaum.

Caching intermediate results for program improvement.
In Proceedings of the ACM SIGPLAN Symposium on
  Partial Evaluation and Semantics-Based Program Manipulation,
pages 190-201, La Jolla, California, June 1995.

 Y. A. Liu.
Deriving incremental programs.
In Proceedings of the 3rd International Conference for 
  Young Computer Scientists,
Beijing, China, July 1993. Tsinghua University Press.

 Y. Liu, B. Zhang, and J. Wang.
A formalized uncertainty reasoning model that combines qualitative
  partitions and quantitative descriptions in multi-factor combination
  problems.
In Proceedings of the 3rd International Fuzzy System Association
  World Congress,
Seattle, Washington, August 1989.

 Y. Liu, B. Zhang, and J. Wang.
The quantitative and qualitative inexactness and reasoning in
  multi-factor combination problems.
In Proceedings of International Symposium for 
  Young Computer Professionals,
Beijing, China, August 1989. The Publishing House of Surveying and Mapping.

Technical Reports
 Y. A. Liu and T. Teitelbaum.

Incremental computation for transformational software development.
Technical Report TR 95-1499, Department of Computer Science, Cornell
  University, Ithaca, New York, March 1995.

 Y. A. Liu and T. Teitelbaum.

Caching intermediate results for program improvement.
Technical Report TR 95-1498, Department of Computer Science, Cornell
  University, Ithaca, New York, March 1995.

 Y. A. Liu and T. Teitelbaum.

Systematic derivation of incremental programs.
Technical Report TR 94-1444, Department of Computer Science, Cornell
  University, Ithaca, New York, August 1994.

 Y. Liu and T. Teitelbaum.

Deriving incremental programs.
Technical Report TR 93-1384, Department of Computer Science, Cornell
  University, Ithaca, New York, September (revised October) 1993.

 Y. Liu and T. Wakayama.
Incremental line breaking algorithms.
Technical Report, Xerox Webster Research Center, 
Webster, New York, August 1992.

Talks
 
  Discovering Auxiliary Information for Incremental Computation. 
   The 23rd Annual ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages, 
  St. Petersburg Beach, Florida, January 23, 1996.

 
  CACHET: A System for Deriving Incremental Programs. 
   The 10th Knowledge-Based Software Engineering Conference, 
  Boston, Massachusetts, November 13, 1995.

 Selectively Caching Intermediate Results for Incremental Computation.
  The 4th  International Conference for Young Computer Scientists, 
  Beijing, China, July 19, 1995.

 Caching Intermediate Results for Program Improvement. ACM
  Symposium on Partial Evaluation and Semantics-Based Program
  Manipulation, La Jolla, California, June 23, 1995 

 Systematic Derivation of Incremental Programs. Kestrel Institute, 
  Palo Alto, California, July 1, 1994.

 Systematic Derivation of Incremental Programs. Dagstuhl-Seminar on 
  Incremental Computation and Dynamic Algorithms, International Conference
  and Research Center for Computer Science, Schloss Dagstuhl, Germany, May
  5, 1994.

 Deriving Incremental Programs. The 3rd International Conference
  for Young Computer Scientists, Beijing, China, July 15, 1993.

 Automatic Derivation of Incremental Programs. System Science
  Laboratory, Xerox Webster Research Center, Webster, New York,
  July 6, 1992.

Software Systems and Documents
 CACHET:
  An incremental-attribution-based interactive system that
  uses systematic program analysis and transformation techniques to
  obtain efficient incremental programs.
  Department of Computer Science, Cornell University, 1993-present.

 OGGEB - An Expert System for the Evaluation of Oil and Gas
  Generation in Basins, with Principle Report, Implementation
  Techniques, Test Report, Usage Manual, and Expert Knowledge Summary.
  Research Institute of Oil Exploration and Development Science
  (CD-RIED) and Tshinghua University, Beijing, 1988-1990.
  Co-authored with J. Song, T. Sun, D. Huang, X. Zhu, B. Zhang, and J. Wang.

Current Projects
  Deriving Incremental Programs
  A general systematic transformational approach to 
  improving the efficiency of computations.

  Composing Efficient Programs
  Optimization and selection techniques for 
  building efficient programs from components.



Department of Computer Science
4141 Upson Hall
Cornell University
Ithaca, NY 14853
(607) 255-5579 (Office)
(607) 255-4428 (Fax)
(607) 277-6468 (Home)
yanhong@cs.cornell.edu
 Last updated November 18, 1995


I have moved on August 17, 1996 to


Computer Science Department
201E Lindley Hall
Indiana University
Bloomington, IN 47405
(812) 855-4373 (Office)
(812) 855-4829 (Fax)
(812) 337-0426 (Home)
liu@cs.indiana.edu
http://www.cs.indiana.edu/people/l/liu.html

