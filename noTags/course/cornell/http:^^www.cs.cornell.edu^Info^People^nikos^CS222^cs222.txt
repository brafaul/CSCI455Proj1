MIME-Version: 1.0
Server: CERN/3.0
Date: Sunday, 01-Dec-96 20:23:04 GMT
Content-Type: text/html
Content-Length: 7197
Last-Modified: Wednesday, 24-Jul-96 04:39:26 GMT


CS222:  Introduction to Scientific Computation



    CS222:  Introduction to Scientific Computation
Summer 1996

 Class Information
 Syllabus
 Source Code
 Handouts
 Problem Sets


An introduction to elementary numerical analysis and scientific
computation.  Topics include interpolation, quadrature, linear and
nonlinear equation solving, least-squares fitting, and ordinary
differential equations.  The Matlab computing environment is used.
Vectorization, efficiency, reliability, and stability are stressed.


Class Information
Staff

 
         Nikos Pitsianis, instructor 
       Office: 5159 Upson Hall 
nikos@cs.cornell.edu 
       Office Hours: M and W 2:30-3:30 and any other time by appointment.

   Ozan Hafizogullari, teaching assistant 
       Office: 4144 Upson Hall 
ozan@cs.cornell.edu 
       Office Hours: T and Th 4:00-5:00 and any other time by appointment.

Lectures
Class meets every day, M-F 1:00-2:15 in 205 Upson Hall.

Course Administration
Laurie Buck, 303 Upson, 255-3534. 
All the questions concerning grade recording, accounts should be addressed
to the course administrator.

Prerequisites
CS 100 and pre/corequisite of Math 221 or Math 293.

Course Materials
Text: Introduction to Scientific Computing:  A Matrix-Vector Approach
Using Matlab, by Charles Van Loan. It will be distributed in class. 
Software: MATLAB. You can purchase Student Matlab, for either
the MacIntosh or the PC version, though you do not have to.

Computer Labs
This course has been designated to use the three computer labs: 
B7 Upson, B8 Sibley, and G83 Martha Van Rensselaer.

Problem Sets

There will be 6 assignments which will be handed out in lecture or
from this page.  Extras will be available in rack outside Upson
303. Assignments will be collected in class.  All the computing
problems will be done in MATLAB. Return of graded work will be
handled in class.

An assignment is due at the beginning of the class on the due
date.  Late assignments won't be accepted for credit. The worst grade
from the six assignments will be ignored for the final grade.

Each assignment can be done alone or with at most one partner.  Print
your name (one copy with both names if working in pairs) on the first
page and include your student ID. No change or addition of partner
names after an assignment has been handed in.

Exams
There will be a midterm and a final exam. Days and times are listed below.

Grading
Your final total score will be computed as follows: 
Best 5 assignments 40%, Midterm 30%, Final 30%. Your final grade will be
assigned according to your relative ranking in the class based on
your final total scores.

Syllabus-Calendar


 June 24, M  Introduction		 A 1 out 
 June 25, T  Programming in MATLAB	 
 June 26, W  Errors			 
 June 27, T  Floating Point Numbers	 Registration Deadline
 June 28, F  Polynomial Interpolation 
 July 1, M  Vandermonde/Newton	A 1 due, 2 out
 July 2, T  Piecewise Interpolation	 
 July 3, W  Linear/Cubic Hermite	 
 July 4, T   No Class 
 July 5, F  Cubic Splines		 Add Course Deadline 
 July 8, M  Numerical Integration	 A 2 due, 3 out 
 July 9, T  Newton-Cotes		 
 July 10, W  Composite Rules  Change Credit/Grade Deadline
 July 11, T  Adaptive Quadrature	 
 July 12, F  Review	     A 3 due  Drop Course Deadline
 July 15, M Midterm Exam, at the classroom	 A 4 out 
 July 16, T  Matrices and Operations  
 July 17, W  Linear Systems	and LU	 
 July 18, T  Least Squares		 
 July 19, F  QR and Givens		 
 July 22, M  Cholesky		 A 4 due, 5 out 
 July 23, T  Finding Roots		 
 July 24, W  Minimize Function of One Variable	 
 July 25, T  Minimize Multivariate Functions 
 July 26, F  Solve Non-Linear Systems	 
 July 29, M  Initial Value Problems	 A 5 due, 6 out 
 July 30, T  Euler /Backward Euler	 
 July 31, W  Runge-Kutta Methods 	 
 Aug. 1, T  Adam Methods		 A 6 due 
 Aug. 2, F  Review			 
 Aug. 5, M   No Class   
 Aug. 6, T  Final Exam  10:30am at the classroom 


Source Code Examples from 
Introduction to Scientific Computing

At the Mac labs B-7 Upson, B-8 Sibley and G-83 Martha van Rennselaer
Hall, the source code is located at the folders:
/Applications/MATLAB 4.2c.1/CS 222/Chapter.[1-9]

If you plan to work on your own stand alone computer or at a lab other
than the assigned ones, here is the source code for the examples:


 
     For Mac (125KB SCMV.sit.hqx file).
 
     For other systems (MS-DOS or Unix 43KB SCMV.tar.gz).
     You uncompress and untar with the unix command:
 zcat SCMV.tar.gz | tar xfv - 
     It is highly recommended you get and use zcat.
 Or just browse through an 
     
     FTP session.


You need a postscript file viewer installed at your computer in order 
to see the files below.

 Handouts

 >> grades(randperm(length(grades))) 

ans = 30    45    56    31    55    39    48    50    38    49    53    43
      43    55    53    56    62    61    58    49    58    44    41    50
      47    52    39    49    49    41    58    57

      
 Problem Sets

 
	          Assignment 1.
           
	          Assignment 2.
           Assignment 4:

		P5.1.5, P5.2.2, P5.2.7, P6.1.3, P6.3.1 and P6.3.3.
           
	          Assignment 5.
      


