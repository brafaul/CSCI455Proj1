Date: Tue, 26 Nov 1996 00:18:23 GMT
Server: NCSA/1.5.1
Last-modified: Fri, 23 Aug 1996 17:07:13 GMT
Content-type: text/html
Content-length: 4529

The Massively Scalar Compiler Group
Rice UniversityHouston, Texas, USA
The Massively Scalar Compiler Group at Rice University
Purpose

The Massively Scalar Compiler Project is designing and building a 
laboratory compiler to explore new compiler-based code-improvement
techniques for microprocessor-based systems.
Our focus is on uniprocessor systems.
Mission

The goals of the Massively Scalar Compiler Project are

	to develop new techniques in code optimization and code
	generation that represent real improvements over existing
	methods,
	to transfer this knowledge to industrial compiler groups 
	in a way that enables them to quickly evaluate and deploy
	new methods, and 
	to implement and distribute a laboratory compiler that can
	serve as a testbed for evaluating new techniques in code
	optimization and code generation.

We view industrial compiler groups as our primary customers, 
with academic researchers as our second priority.

Our primary focus is on problems that arise for uniprocessor,
microprocessor-based systems.  We try to ensure that our techniques
work equally well in multiprocessor systems.

This work is supported by both ARPA and the State of Texas.

Problems that we attack
In general, we investigate problems that arise in compiling code for 
uniprocessor microprocessor-based systems.  Our particular areas of
interest are code improvement techniques (often misnamed "optimization") and
code generation issues.  A common misconception is that 
these problems were all solved in 1980.
Methodology
As a group, we have a strong belief in the development of new algorithms
coupled with experimental evaluation.  
We view research and development as two halves of a whole effort.
Each of our research activities is directly coupled to a development
activity. 
It is our intent to build a reference implementation for each new technique
that proves its worth; these are written in 
nuweb,
a literate programming tool.
The implementation is intended to serve as a reference guide for 
reimplementation in a commercial setting.

For the truly interested, a longer discussion
is available.
 Personnel

 
The group scaling a massive object 


The Massively Scalar Compiler Project is led by four researchers

Keith D. Cooper
Ken Kennedy
Taylor Simpson
Linda Torczon

The prime reason that these people are productive is because they have
a supporting cast of staff 
and graduate students.
Software
One of the prime work products of the project is software.
As a phase of the compiler achieves a semblance of stability and 
maturity, we place it into the pool of released software.
The code is available (in nuweb form) 
via anonymous ftp. 

The compiler uses a low-level intermediate language named ILOC.  
We have gathered together in one place the 
complete ILOC archives,
including unpublished papers and newsletters. 
We hope that someone learns from our experience! 


Accomplishments
This project produces several kinds of results.  The first, of course,
is students.  Preston Briggs of Tera Computers and Cliff Click of 
Hewlett-Packard are both recent graduates.
We publish papers on our work in 
several different venues.
We write software and make it 
available via the web.
For more information, we have a brief 
summary of results available online.


More information
Our most recent annual report can be found in the 
ARPA archives.

Overhead transparencies and 
poster materials from the Spring 96 ARPA PI
meeting are also archived online.


This page has been accessed 

times since we started counting in September 1995.




